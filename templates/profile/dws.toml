# Tools defined here install into $XDG_STATE_HOME/dws/bin and are cached in
# $XDG_CACHE_HOME/dws/tools. Uncomment the entries you want to provision as part
# of this profile.
#
# An entry applies on every machine unless you specify filters:
#   platform = ["macos", "linux", "linux-ubuntu"]  # matches current OS/distro
#   hosts = ["work-laptop"]                        # matches sanitized hostname
#
# When multiple files define the same tool, the higher-precedence file replaces
# the entire entry. Workspace overrides live in $XDG_CONFIG_HOME/dws/config.toml.

# [tools.ripgrep]
# installer = "curl"
# project = "BurntSushi/ripgrep"
# version = "14.0.0"  # Optional pin
# asset_filters = ["ripgrep-.*-x86_64-apple-darwin\\.tar\\.gz"]
# checksum = "0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef"
# (UBI removed; curl placeholder until internal GitHub backend lands)

# [tools.rustup]
# installer = "curl"
# url = "https://sh.rustup.rs"
# shell = "sh"
# self_update = true

# [tools.uv]
# installer = "curl"
# url = "https://astral.sh/uv/install.sh"
# shell = "sh"

# [tools.fnm]
# installer = "curl"
# project = "Schniz/fnm"
# asset_filters = ["fnm-.*-x86_64-unknown-linux-musl\\.tar\\.gz"]
# checksum = "ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
# (UBI removed; adjust to curl or wait for github backend)

# [tools.helix]
# installer = "curl"
# project = "helix-editor/helix"
# bin = ["hx"]
# asset_filters = ["helix-.*-x86_64-linux\\.tar\\.xz"]
# checksum = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
# (UBI removed; curl placeholder until archive installer implemented)
# symlinks = ["contrib/completion/hx.zsh:${XDG_DATA_HOME}/zsh/completions/_hx"]
# status_cmd = "hx --version"

# [tools.gh]
# installer = "curl"
# project = "cli/cli"
# bin = ["bin/gh"]
# asset_filters = ["gh_.*_macOS_amd64\\.tar\\.gz"]
# checksum = "bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"
# (UBI removed; curl placeholder)
